# -*- coding: utf-8 -*-
"""AFRICA.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/102aeAvG0kqJXt55rjusqvV7NNVvhnZ21
"""

# links
population = 'https://en.wikipedia.org/wiki/List_of_African_countries_by_population'

gdp = 'https://en.wikipedia.org/wiki/List_of_African_countries_by_GDP_(nominal)'

size = 'https://en.wikipedia.org/wiki/List_of_African_countries_by_area'

# import libraries
import pandas as pd
import requests
from bs4 import BeautifulSoup



"""**POPULATION**"""

pop_response = requests.get(population)

# status code
pop_response.status_code

soup1 = BeautifulSoup(pop_response.content, 'html')
soup1

pop_tables = soup1.find_all('table')[2]
pop_tables

# Step 2: Find the table with class "wikitable sortable"
table = soup1.find("table", {"class": "wikitable"})
#table

# Step 3: Extract the headers
headers = [header.get_text(strip=True) for header in table.find_all("th")]
headers

# Step 2: Find the table with class "wikitable sortable"
table = soup1.find("table", {"class": "wikitable"})

# Step 3: Extract the headers
headers = [header.get_text(strip=True) for header in table.find_all("th")]

# Get table rows
data = []
for row in table.find_all("tr")[1:]:  # skip header
    cells = row.find_all("td")
    if cells:
        data.append([cell.text.strip() for cell in cells])

# Create DataFrame
df = pd.DataFrame(data, columns=headers)

df.sample(6)

df.drop(columns='', inplace=True)

df.head(3)

df[df['Country']=='DR Congo']

df.to_csv('population.csv', index=False)

"""GROSS DOMESTIC PRODUCT (GDP)"""

gdp = 'https://en.wikipedia.org/wiki/List_of_African_countries_by_GDP_(nominal)'

# get gdp data
gdp_response = requests.get(gdp)

soup2 = BeautifulSoup(gdp_response.content, 'html')
soup2

# Step 2: Find the table with class "wikitable sortable"
table = soup2.find("table", {"class": "wikitable"})

# Step 3: Extract the headers
headers = [header.get_text(strip=True) for header in table.find_all("th")][:5]

# Get table rows
data = []
for row in table.find_all("tr")[1:]:  # skip header
    cells = row.find_all("td")
    if cells:
        data.append([cell.text.strip() for cell in cells])


# Create DataFrame
df1 = pd.DataFrame(data, columns=headers)

df1.sample(6)

df1[df1['Country']=='Democratic Republic of the Congo']

df1['Country'].unique()

df['Country'].unique()

df1['Country'] = df1['Country'].replace("CÃ´te d'Ivoire", "Ivory Coast")

df1['Country'] = df1['Country'].replace("Cabo Verde", "Cape Verde")

df1['Country'] = df1['Country'].replace("Democratic Republic of the Congo", "DR Congo")
df1['Country'] = df1['Country'].replace("Republic of the Congo", "DR Congo")

df1.drop(columns='Rank', inplace=True)

df1.sample(4)

df1.to_csv('Gross Domestic Product.csv', index=False)

"""**SIZE**"""

# request
land_siz_response = requests.get(size)

soup = BeautifulSoup(land_siz_response.content, 'html')

# Step 2: Find the table with class "wikitable sortable"
table = soup.find("table", {"class": "wikitable"})

# Step 3: Extract the headers
headers = [header.get_text(strip=True) for header in table.find_all("th")][:5]

# Get table rows
data = []
for row in table.find_all("tr")[1:]:  # skip header
    cells = row.find_all("td")
    if cells:
        data.append([cell.text.strip() for cell in cells])

# Create DataFrame
df2 = pd.DataFrame(data, columns=headers)
#headers
df2.sample(5)

df2['Country'].unique()

#df2.info()

df2.drop(columns='', inplace=True)
df2.tail(4)

df2.to_csv('land size.csv', index=False)

df['Country'].unique()

# merge dfs
data = df.merge(df1, on='Country', how= 'left')
data



df_final = pd.merge(df2, data, on= 'Country')
df_final

# read the csv files
path = '/content/population.csv'
path1 = '/content/Gross Domestic Product.csv'
path2 ='/content/land size.csv'

data1 = pd.read_csv(path)
data2 = pd.read_csv(path1)
data3 = pd.read_csv(path2)





data1['Country'].unique()

data1

#data2['Country'].unique()

data2['Country'] = data2['Country'].rename({'Democratic Republic of the Congo': 'DR Congo'}, inplace=True)

data2[data2['Country']=='Democratic Republic of the Congo']